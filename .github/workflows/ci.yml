name: CI

on:
  push:
    branches:
      - master
    paths-ignore:
      - ".gitignore"
      - "README.rst"
  pull_request:
    paths-ignore:
      - ".gitignore"
      - "README.rst"

permissions:
  contents: read

jobs:
  build-package:
    runs-on: ubuntu-latest
    concurrency:
      group: ${{ github.event_name }}-${{ github.workflow }}-${{ github.ref_name }}-build
      cancel-in-progress: true
    timeout-minutes: 20

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          fetch-tags: true

      - uses: actions/setup-python@v5
        with:
          python-version: "3.12"
          cache: pip
          cache-dependency-path: |
            setup.py
            **/*requirements.txt
            tox.ini

      - run: make setup-ci

      - run: make build

      - uses: actions/upload-artifact@v4
        with:
          name: dist
          path: ./dist/*

  lint:
    runs-on: ubuntu-latest
    concurrency:
      group: ${{ github.event_name }}-${{ github.workflow }}-${{ github.ref_name }}-lint
      cancel-in-progress: true
    timeout-minutes: 20

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          fetch-tags: true

      - uses: actions/setup-python@v5
        with:
          python-version: "3.12"
          cache: pip
          cache-dependency-path: |
            setup.py
            **/*requirements.txt
            tox.ini

      - run: make setup-ci

      - run: make check

  unit-test:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.7", "3.8", "3.9", "3.10", "3.11", "3.12", "3.13.0-rc.1", "pypy-3.10"]
        os: [ubuntu-latest, macos-latest, windows-latest]
        exclude:
          - os: macos-latest
            python-version: "3.7"
          - os: windows-latest
            python-version: "3.11"
    concurrency:
      group: ${{ github.event_name }}-${{ github.workflow }}-unit-test-${{ matrix.os }}-${{ matrix.python-version }}
      cancel-in-progress: true
    timeout-minutes: 20

    steps:
      - uses: GitHubSecurityLab/actions-permissions/monitor@v1
        with:
          config: ${{ vars.PERMISSIONS_CONFIG }}
        if: ${{ matrix.os == 'ubuntu-latest' }}

      - uses: actions/checkout@v4

      - name: Setup Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: pip
          cache-dependency-path: |
            setup.py
            **/*requirements.txt
            tox.ini

      - run: make setup-ci

      - name: Run tests
        env:
          PYTEST_DISCORD_WEBHOOK: ${{ secrets.PYTEST_DISCORD_WEBHOOK }}
        run: tox -e cov

      - run: ls -alR
        if : ${{ matrix.os != 'windows-latest' }}

      - name: Install coveralls
        run: python -m pip install --upgrade --disable-pip-version-check coveralls tomli

      - name: Upload coverage data to coveralls.io
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          COVERALLS_FLAG_NAME: ${{ matrix.os }}-${{ matrix.python-version }}
          COVERALLS_PARALLEL: true
        run: coveralls --service=github

  coveralls:
    name: Indicate completion to coveralls.io
    needs: unit-test
    runs-on: ubuntu-latest
    container: python:3-slim

    steps:
    - run: pip3 install --upgrade coveralls

    - name: Finished
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: coveralls --finish

