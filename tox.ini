[tox]
envlist =
    py{37,38,39,310,311,312,313}
    pypy3
    build
    cov
    docs
    fmt
    lint
    readme
skip_missing_interpreters = true

[testenv]
passenv = *
extras =
    test
allowlist_externals =
    pytest
commands =
    pytest {posargs}

[testenv:build]
deps =
    build>=1
    twine
    wheel
commands =
    python -m build
    twine check dist/*.whl dist/*.tar.gz

[testenv:clean]
skip_install = true
deps =
    cleanpy>=0.4
commands =
    cleanpy --all --exclude-envs .

[testenv:cov]
passenv = GITHUB_*
extras =
    test
deps =
    coverage[toml]>=5
commands =
    coverage run -m pytest {posargs:-vv}
    coverage report -m

[testenv:docs]
extras =
    docs
commands =
    sphinx-build docs/ docs/_build

[testenv:fmt-black]
skip_install = true
deps =
    autoflake>=2
    black>=24.1
    isort>=5
commands =
    autoflake --in-place --recursive --remove-all-unused-imports .
    isort .
    black setup.py test pathvalidate

[testenv:fmt]
skip_install = true
deps =
    autoflake>=2
    isort>=5
    ruff>=0.3.5
commands =
    autoflake --in-place --recursive --remove-all-unused-imports .
    isort .
    ruff format

[testenv:lint]
extras =
    docs
    readme
    test
deps =
    codespell>=2
    pyright>=1.1
    releasecmd
    ruff>=0.3.5
    types-click
commands =
    pyright pathvalidate setup.py
    codespell pathvalidate docs/pages examples test -q2 --check-filenames
    ruff format --check
    ruff check

[testenv:lint-examples]
changedir = examples
deps =
    jupyter
    mypy>=1
    pathvalidate>=3
    pyright>=1.1
    types-click
    ruff>=0.3.5
commands =
    jupyter nbconvert pathvalidate_examples.ipynb --to python
    pyright
    ruff check
    ruff format --check

[testenv:readme]
changedir = docs
extras =
    readme
commands =
    python make_readme.py

[testenv:release]
deps =
    releasecmd
commands =
    python setup.py release --sign --skip-uploading --verbose
